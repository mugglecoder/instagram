type User {
  id: ID! @id
  password: String!
  avatar: String
  username: String! @unique
  email: String! @unique
  firstName: String @default(value: "")
  lastName: String
  bio: String
  following: [User!]! @relation(name: "FollowRelation")
  followers: [User!]! @relation(name: "FollowRelation")
  posts: [Post!]! @relation(name: "PostsOfUser", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikesOfUser", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentsOfUser", onDelete: CASCADE)
  rooms: [Room!]!
  loginSecret: String
  verified: Boolean! @default(value: false)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Post {
  id: ID! @id
  location: String
  caption: String!
  content: String
  selectType:String
  deposit: String
  money: String
  places: [Place] @relation(name: "PlacesOfPost", onDelete: CASCADE)
  user: User @relation(name: "PostsOfUser")
  files: [File] @relation(name: "FilesOfPost", onDelete: CASCADE)
  likes: [Like] @relation(name: "LikeOfPost", onDelete: CASCADE)
  comments: [Comment] @relation(name: "CommentsOfPost", onDelete: CASCADE)
  count: Int @default(value: 0)airConditioner : Boolean
  washer : Boolean
  refrigerator : Boolean
  internet : Boolean
  microwave : Boolean
  wifi : Boolean
  bed : Boolean
  desk : Boolean
  induction : Boolean
  gasRange : Boolean
  doorLock : Boolean
  CCTV : Boolean
  pets : Boolean
  elevator : Boolean
  parking : Boolean
  electricHeating : Boolean
  cityGasHeating : Boolean
  nightElectric : Boolean
  wateTax : Boolean
  includingElectricity : Boolean
  cityGasIncluded : Boolean
  numberOfFoors : String
  MLSnumber : String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}


type Like {
  id: ID! @id
  user: User @relation(name: "LikesOfUser")
  post: Post @relation(name: "LikeOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Comment {
  id: ID! @id
  text: String!
  user: User @relation(name: "CommentsOfUser")
  post: Post @relation(name: "CommentsOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type File {
  id: ID! @id
  url: String!
  post: Post @relation(name: "FilesOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Place {
  id : ID! @id
  post:Post @relation(name: "PlacesOfPost")
  lat:String
  lng:String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Room {
  id: ID! @id
  participants: [User!]!
  messages: [Message!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Message {
  id: ID! @id
  text: String!
  from: User! @relation(name: "From")
  to: User! @relation(name: "To")
  room: Room!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}
